/*!
  \page      unittest_doc UnitTest: Unit test suite
  <img src="https://quinoacomputing.github.io/quinoa/unittest.svg" align="right" width="40%" background=transparent>

UnitTest is a fully asynchronous distributed-memory-parallel [unit
test](http://en.wikipedia.org/wiki/Unit_testing) harness, running hundreds of
tests per second, capable of testing serial, synchronous (e.g., MPI), and
asynchronous (e.g., Charm++) functions.

UnitTest uses the [Charm++](http://charm.cs.illinois.edu) runtime system
to run the tests concurrently, either on a single machine or a networked set of
computers. The software design is fully asynchronous, yielding 100% CPU
utilization at all times, independent of the time taken by the individual tests.

In Quinoa unit tests are written using the [C++ Template Unit Test
framework](http://tut-framework.sourceforge.net). The tests are organized into
directories under src/UnitTest/tests mirroring the directories of the tested
code.

Help on command-line parameters
-------------------------------

As usual, use the \a -h command-line parameter to get on-screen help from an
executable. Example output, excluding Charm++ command-line parameters:
\code{.py}
$ unittest -h
unittest Command-line Parameters:
         -g, --group     string Select test group(s) to run
          -h, --help            Display one-liner help on all command-line arguments
        -H, --helpkw     string Display verbose help on a single keyword
       -v, --verbose            Select verbose screen output
\endcode

<hr>
<div><small>
<em>Page last updated:</em> Thu 17 Nov 2016 07:56:02 AM MST
<em>Copyright 2012-2015, Jozsef Bakosi, 2016, Los Alamos National Security, LLC.</em>
</small></div>
*/
