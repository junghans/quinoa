// *****************************************************************************
/*!
  \file      src/Inciter/performer.ci
  \author    J. Bakosi
  \date      Fri 29 Jul 2016 02:52:38 PM MDT
  \copyright 2012-2015, Jozsef Bakosi, 2016, Los Alamos National Security, LLC.
  \brief     Charm++ module interface file for Performer
  \details   Charm++ module interface file for Performer
*/
// *****************************************************************************

module performer {

  extern module conductor;
  extern module linsysmerger;
  extern module tracker;
  extern module particlewriter;

  namespace inciter {

    array [1D] Performer {
      entry
        Performer( const CProxy_Conductor& conductor,
                   const tk::CProxy_LinSysMerger< CProxy_Conductor,
                                                  CProxy_Performer >& lsm,
                   const CProxy_Tracker< CProxy_Performer >& tracker,
                   const tk::CProxy_ParticleWriter& pw,
                   const std::vector< std::size_t >& conn,
                   const std::unordered_map< std::size_t, std::size_t >& cid,
                   int nperf,
                   int nel );
      initnode void registerVerifyBCMerger();
      entry void setup();
      entry void requestBCs();
      entry void oldID( int frompe, const std::vector< std::size_t >& newids );
      entry void bcval( int frompe, const std::vector< std::size_t >& nodes );
      entry void init( tk::real dt );
      entry void updateSolution( const std::vector< std::size_t >& gid,
                                 const std::vector< tk::real >& sol );
      entry void advance( uint8_t stage, tk::real dt, uint64_t it, tk::real t );
    };

  } // inciter::

}
